name: Deployment to UAT

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check if Version Exists
        run: |
          # Define the version to deploy
          deploy_version=${{ github.event.inputs.version }}

          # List available artifacts
          available_artifacts=$(ls my_artifact)

          # Check if the specified version exists in the artifacts
          if echo "${available_artifacts}" | grep -q "${deploy_version}"; then
            echo "Found artifact for version ${deploy_version}. Proceeding with deployment."
          else
            echo "No artifact found for version ${deploy_version}. Deployment aborted."
            exit 1
          fi

      # Add the rest of your deployment steps here


      #- name: Download Artifact
       # uses: actions/download-artifact@v2
        #with:
         # name: BuildSprint400  # Name of the artifact defined in the build pipeline
          #path: artifact

      - name: Download Artifact
        run: |
         curl -LJO \
         -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
         "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/my_artifact"


      - name: Set up Environment Variables
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init

      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}


      - name: Apply Terraform
        run: terraform apply -auto-approve

      # Add additional steps for configuring and using the storage account as neededd

